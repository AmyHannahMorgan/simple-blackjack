/* imports */
@import url('https://fonts.googleapis.com/css?family=Noto+Sans|Vollkorn&display=swap');

/* root */
:root{
    --black-text-color: #111111;
    --white-text-color: #eee5e9;
    --dark-bg-color: #111111;
    --light-bg-color: #eee5e9;
    --error-color: #d90429;
    --highlight-dark: #92dce5;
    --highlight-light: #0eb1d2;

    --display-font: 'Vollkorn', serif;
    --print-font: 'Noto Sans', sans-serif;
}

/* animations */

@keyframes wiggle {
    from {
        transform: rotate(-22.5deg);
    }
    to {
        transform: rotate(22.5deg);
    }
}

/* ids */
body {
    margin: 0;
}

/* classes */
.startMenu {
    margin: auto;
    /* TODO: move below to desktop/landscape query */
    /* max-width: 75vw; */
    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;
    overflow: hidden;
}

.startMenu > h1 {
    font-family: var(--display-font);
    color: var(--black-text-color);
    text-align: center;
    font-size: 20vmin;

    margin: auto;
}

.startMenu > .imageHeader {
    margin: auto;
    margin-top: 1vh;

    display: flex;
    flex-direction: row;
    justify-content: space-around;

    width: 75%;
}

.imageHeader > img {
    height: 7.5vmax;

    object-fit: contain;

    animation: wiggle 1s ease-in-out infinite alternate;
}

.startMenu > .buttonContainer {
    display: grid;
    grid-template-columns: [horizontal-area-1] 1fr [horizontal-spacer] 5vw [horizontal-area-2] 1fr;
    grid-template-rows: [vertical-area-1] auto [center-spacer] 5vh [vertical-area-2] auto;

    margin: auto;
    margin-top: 5vh;
    width: 60vw;
    max-width: 60vw;
    height: auto;
}

.buttonContainer > .buttonGrid {
    display: flex;
    justify-content: center;
}

.buttonContainer > .buttonGrid.play {
    grid-column: horizontal-area-1 / span 3;
    grid-row: vertical-area-1 / center-spacer;
}

.buttonContainer > .buttonGrid.rules {
    grid-column: horizontal-area-1 / span 3;
    grid-row: vertical-area-2;
}

.buttonGrid > button {
    border: none;
    background-color: var(--dark-bg-color);

    width: 100%;
    
    color: var(--white-text-color);
    font-family: var(--print-font);
    font-size: 10vmin;

    transition: background-color 0.25s ease-in-out;
}

.buttonGrid > button:hover {
    background-color: var(--highlight-light);
}

.modal {
    display: none;

    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;

    position: absolute;
    left: 0;
    top: 0;

    background-color: rgba(17, 17, 17, 0);
    transition: background-color 0.25s ease-in-out;
}

.modal > .modalContent {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    width: 75vw;
    max-width: 75vw;
    max-height: 75vh;

    background-color: var(--light-bg-color);
    border: medium solid var(--highlight-light);
    border-radius: 25px;

    color: var(--black-text-color);
    overflow: scroll;
}

.modal.open {
    display: block;

    background-color: rgba(17, 17, 17, 0.75);
}

.modalContent > .modalHeader {
    position: sticky;
    left: 0;
    top: 0;
    margin-top: 25px;

    background-color: var(--light-bg-color);
}

.modalContent > .modalHeader > h2 {
    font-family: var(--display-font);
    font-size: 10vmin;

    margin: 25px 1vw 0 1vw;

    border-bottom: thin solid var(--highlight-light);
}

.modalContent > .modalText {
    font-family: var(--print-font);

    margin: 0 1vw;
}

.modalContent > .modalText > h3 {
    font-size: 5vmin;
}

.modalContent > .modalText > p {
    font-size: 4vmin;
}

/* media queries */
@media only screen and (orientation: landscape){
    .buttonContainer > .buttonGrid.play {
        grid-column: horizontal-area-1 / horizontal-spacer;
        grid-row: vertical-area-1 / center-spacer;
    }
    
    .buttonContainer > .buttonGrid.rules {
        grid-column: horizontal-area-2 / edge-spacer-end;
        grid-row: vertical-area-1 / center-spacer;
    }
}